<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Product_stock extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Product_stock_model');
    } 

    /*
     * Listing of product_stock
     */
    function index()
    {
        $data['product_stock'] = $this->Product_stock_model->get_all_product_stock();

        $data['_view'] = 'product_stock/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new product_stock
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'is_fully_payment' => $this->input->post('is_fully_payment'),
				'is_promotion' => $this->input->post('is_promotion'),
				'is_early_bird' => $this->input->post('is_early_bird'),
				'product_id' => $this->input->post('product_id'),
				'product_stock_code' => $this->input->post('product_stock_code'),
				'product_stock_due_date' => $this->input->post('product_stock_due_date'),
				'product_stock_depart_at' => $this->input->post('product_stock_depart_at'),
				'product_stock_depart_duration' => $this->input->post('product_stock_depart_duration'),
				'product_stock_arrive_at' => $this->input->post('product_stock_arrive_at'),
				'product_stock_arrive_duration' => $this->input->post('product_stock_arrive_duration'),
				'product_stock_period' => $this->input->post('product_stock_period'),
				'product_stock_airline_id' => $this->input->post('product_stock_airline_id'),
				'product_stock_flight_no_go' => $this->input->post('product_stock_flight_no_go'),
				'product_stock_flight_no_return' => $this->input->post('product_stock_flight_no_return'),
				'product_stock_flight_route_go' => $this->input->post('product_stock_flight_route_go'),
				'product_stock_flight_route_return' => $this->input->post('product_stock_flight_route_return'),
				'product_stock_hotel_id' => $this->input->post('product_stock_hotel_id'),
				'product_stock_price' => $this->input->post('product_stock_price'),
				'product_stock_to_discount' => $this->input->post('product_stock_to_discount'),
				'product_stock_single_price' => $this->input->post('product_stock_single_price'),
				'product_stock_advanced_price' => $this->input->post('product_stock_advanced_price'),
				'product_stock_booked' => $this->input->post('product_stock_booked'),
				'product_stock_total' => $this->input->post('product_stock_total'),
				'product_stock_min_book' => $this->input->post('product_stock_min_book'),
				'is_direct_flight' => $this->input->post('is_direct_flight'),
				'is_active' => $this->input->post('is_active'),
				'created_at' => $this->input->post('created_at'),
				'product_stock_commission' => $this->input->post('product_stock_commission'),
				'product_stock_add_on' => $this->input->post('product_stock_add_on'),
				'payment_method' => $this->input->post('payment_method'),
            );
            
            $product_stock_id = $this->Product_stock_model->add_product_stock($params);
            redirect('product_stock/index');
        }
        else
        {            
            $data['_view'] = 'product_stock/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a product_stock
     */
    function edit($product_stock_id)
    {   
        // check if the product_stock exists before trying to edit it
        $data['product_stock'] = $this->Product_stock_model->get_product_stock($product_stock_id);
        
        if(isset($data['product_stock']['product_stock_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'is_fully_payment' => $this->input->post('is_fully_payment'),
					'is_promotion' => $this->input->post('is_promotion'),
					'is_early_bird' => $this->input->post('is_early_bird'),
					'product_id' => $this->input->post('product_id'),
					'product_stock_code' => $this->input->post('product_stock_code'),
					'product_stock_due_date' => $this->input->post('product_stock_due_date'),
					'product_stock_depart_at' => $this->input->post('product_stock_depart_at'),
					'product_stock_depart_duration' => $this->input->post('product_stock_depart_duration'),
					'product_stock_arrive_at' => $this->input->post('product_stock_arrive_at'),
					'product_stock_arrive_duration' => $this->input->post('product_stock_arrive_duration'),
					'product_stock_period' => $this->input->post('product_stock_period'),
					'product_stock_airline_id' => $this->input->post('product_stock_airline_id'),
					'product_stock_flight_no_go' => $this->input->post('product_stock_flight_no_go'),
					'product_stock_flight_no_return' => $this->input->post('product_stock_flight_no_return'),
					'product_stock_flight_route_go' => $this->input->post('product_stock_flight_route_go'),
					'product_stock_flight_route_return' => $this->input->post('product_stock_flight_route_return'),
					'product_stock_hotel_id' => $this->input->post('product_stock_hotel_id'),
					'product_stock_price' => $this->input->post('product_stock_price'),
					'product_stock_to_discount' => $this->input->post('product_stock_to_discount'),
					'product_stock_single_price' => $this->input->post('product_stock_single_price'),
					'product_stock_advanced_price' => $this->input->post('product_stock_advanced_price'),
					'product_stock_booked' => $this->input->post('product_stock_booked'),
					'product_stock_total' => $this->input->post('product_stock_total'),
					'product_stock_min_book' => $this->input->post('product_stock_min_book'),
					'is_direct_flight' => $this->input->post('is_direct_flight'),
					'is_active' => $this->input->post('is_active'),
					'created_at' => $this->input->post('created_at'),
					'product_stock_commission' => $this->input->post('product_stock_commission'),
					'product_stock_add_on' => $this->input->post('product_stock_add_on'),
					'payment_method' => $this->input->post('payment_method'),
                );

                $this->Product_stock_model->update_product_stock($product_stock_id,$params);            
                redirect('product_stock/index');
            }
            else
            {
                $data['_view'] = 'product_stock/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The product_stock you are trying to edit does not exist.');
    } 

    /*
     * Deleting product_stock
     */
    function remove($product_stock_id)
    {
        $product_stock = $this->Product_stock_model->get_product_stock($product_stock_id);

        // check if the product_stock exists before trying to delete it
        if(isset($product_stock['product_stock_id']))
        {
            $this->Product_stock_model->delete_product_stock($product_stock_id);
            redirect('product_stock/index');
        }
        else
            show_error('The product_stock you are trying to delete does not exist.');
    }
    
}
